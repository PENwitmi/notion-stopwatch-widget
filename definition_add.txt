# ストップウォッチウィジェット モバイル最適化 追加要件定義書

## 1. 変更概要

### 1.1 変更の背景
- 既存のデスクトップ最適化レイアウトをモバイル環境で改善
- 現在の横並びボタンレイアウトの使用感向上
- タッチ操作に特化したUIの実現

### 1.2 変更範囲
- モバイル表示時（600px以下）のボタンレイアウト変更
- タッチ操作の最適化
- フォントサイズとボタンサイズの調整
- レスポンシブ表示の改善

## 2. モバイル向け機能要件

### 2.1 新ボタンレイアウト仕様

#### 2.1.1 レイアウト構成
```
┌─────────────────────────┐
│     ⏰ 05:32.18        │ ← 時間表示（大）
├─────────────────────────┤
│ [     Start     ] [Lap] │ ← 新レイアウト
│ [               ] [───] │
│ [               ] [Rst] │
└─────────────────────────┘
```

#### 2.1.2 ボタン配置詳細
- **Startボタン**: 左側、縦2行分のサイズ
- **Lap/Resetボタン**: 右側、縦並び配置
- **面積比率**: Start 67% : Lap/Reset 33%

#### 2.1.3 ボタンサイズ仕様
| ボタン | 幅 | 高さ | フォントサイズ | 重要度 |
|--------|----|----|------------|-------|
| Start/Stop | 約180px | 124px | 20px | 最高 |
| Lap | 約80px | 56px | 16px | 中 |
| Reset | 約80px | 56px | 16px | 中 |

### 2.2 タッチ操作要件

#### 2.2.1 タッチエリア
- **最小タッチサイズ**: 44px × 44px（iOS HIG準拠）
- **推奨タッチサイズ**: 56px × 56px以上
- **ボタン間隔**: 最小12px、推奨16px以上

#### 2.2.3 タッチ操作詳細最適化
- **タップ範囲拡張**: 視覚的ボタンより8px大きなタッチエリア
- **スクロール動作**: データエリアのみスクロール可能
- **ピンチズーム**: 完全無効化
- **テキスト選択**: 時間表示以外は無効化
- **ロングタップ**: 無効化（誤操作防止）

#### 2.2.4 操作フィードバック強化
- **タップ時**: 0.95倍スケール（0.1s）
- **ボタン状態変化**: 0.2sのスムーズトランジション
- **時間更新**: アニメーションなし（パフォーマンス重視）
- **ハプティックフィードバック**: 対応デバイスで振動

### 2.5 アニメーション・パフォーマンス最適化

#### 2.5.1 モバイル向けアニメーション制御
```css
/* デスクトップ時 */
.btn:hover { transform: translateY(-1px); }

/* モバイル時（無効化） */
@media (max-width: 600px) {
    .btn:hover { transform: none; }
    .btn:active { 
        transform: scale(0.95);
        transition: transform 0.1s ease;
    }
}
```

#### 2.5.2 GPU加速活用
- **transform**: `translate3d()` 使用
- **opacity**: アニメーション対象に限定
- **will-change**: ボタン要素のみ適用

#### 2.5.3 パフォーマンス監視
- **FPS**: 60fps維持必須
- **メモリ使用量**: タイマー実行時の増加監視
- **バッテリー消費**: 最小化

### 2.3 視認性要件

#### 2.3.1 時間表示の段階的最適化
| 画面幅 | フォントサイズ | 行間 | 下部余白 | 備考 |
|--------|-------------|------|---------|------|
| 601px以上 | 48px | 1.0 | 30px | デスクトップ仕様 |
| 401px-600px | 48px | 1.1 | 28px | 標準モバイル |
| 321px-400px | 44px | 1.1 | 24px | 小画面調整 |
| 320px以下 | 40px | 1.2 | 20px | 極小画面 |

#### 2.3.2 時間表示の詳細要件
- **フォント**: モノスペースフォント必須
- **文字間隔**: `letter-spacing: 1px`（モバイル時）
- **色彩**: `#1a365d`（ディープブルー）維持
- **テキストシャドウ**: 軽微な影で立体感演出
- **中央揃え**: 水平・垂直両方向

#### 2.3.3 その他フォントサイズ（モバイル時）
| 要素 | 現在 | 改善後 | 追加仕様 |
|------|------|-------|---------|
| Startボタン | 14px | 20px | font-weight: 600 |
| その他ボタン | 14px | 16px | font-weight: 500 |
| データリスト | 14px | 16px | line-height: 1.4 |
| セクション見出し | 14px | 16px | letter-spacing: 1px |

#### 2.3.4 コントラスト・色彩要件
- **背景とテキスト**: 4.5:1以上のコントラスト比
- **ボタン状態**: アクティブ/非アクティブが明確に区別可能
- **時間表示**: 最高レベルの視認性確保
- **データエリア**: 白文字の可読性最適化

## 3. レスポンシブ設計要件

### 3.1 ブレークポイント仕様

#### 3.1.1 画面サイズ別対応
| 画面幅 | レイアウト | ボタン配置 | 特記事項 |
|--------|-----------|----------|---------|
| 601px以上 | 横長 | 横並び3つ | デスクトップ仕様 |
| 401px-600px | 縦長 | Start大+縦並び | 標準モバイル |
| 400px以下 | 縦長 | Start大+縦並び | 小画面調整 |

#### 3.1.2 画面向き対応
- **縦向き（Portrait）**: 新ボタンレイアウト適用
- **横向き（Landscape）**: デスクトップレイアウト維持（要検討）

### 3.2 コンテナサイズ調整

#### 3.2.1 レスポンシブサイズ仕様
| 画面幅 | コンテナ幅 | コンテナ高さ | 左右マージン | 備考 |
|--------|-----------|------------|-------------|------|
| 601px以上 | 700px固定 | 250px固定 | auto | デスクトップ |
| 401px-600px | 画面幅-20px | 最小520px | 10px | 標準モバイル |
| 321px-400px | 画面幅-16px | 最小480px | 8px | 小画面 |
| 320px以下 | 画面幅-12px | 最小450px | 6px | 極小画面 |

#### 3.2.2 エリア別サイズ調整
| 画面幅 | メインエリア高さ | データエリア高さ | 内部余白 |
|--------|----------------|----------------|---------|
| 401px-600px | 300px | 220px | 32px/20px |
| 321px-400px | 280px | 200px | 28px/18px |
| 320px以下 | 260px | 190px | 24px/16px |

### 3.3 画面向き対応

#### 3.3.1 Portrait（縦向き）モード
- **全画面幅**: 新ボタンレイアウト適用
- **コンテナ**: 縦長最適化
- **時間表示**: 大サイズ表示

#### 3.3.2 Landscape（横向き）モード
- **600px以下かつ横向き**: デスクトップレイアウト維持
- **高さ制限**: 最大250px
- **ボタン**: 横並び3つ
- **データエリア**: 右側40%維持

### 2.4 データ表示エリアの改善

#### 2.4.1 ラップタイム・履歴エリア最適化
| 画面幅 | リスト文字サイズ | 行間 | 項目間隔 | 見出しサイズ |
|--------|----------------|------|---------|------------|
| 401px-600px | 16px | 1.4 | 12px | 16px |
| 321px-400px | 15px | 1.4 | 10px | 15px |
| 320px以下 | 14px | 1.5 | 8px | 14px |

#### 2.4.2 スクロール最適化
- **スクロールバー**: 8px幅（モバイル時）
- **スクロール慣性**: `-webkit-overflow-scrolling: touch`
- **最大高さ**: 画面高さの30%
- **項目表示**: 最大8項目（自動スクロール）

#### 2.4.3 コンテンツ階層
- **優先度1**: 現在時間・Start/Stopボタン
- **優先度2**: Lap/Resetボタン
- **優先度3**: 最新3件のラップタイム
- **優先度4**: 履歴データ

## 4. 技術実装要件

### 4.1 実装方法選択肢

#### 4.1.1 CSS Grid方式（推奨）
```css
@media (max-width: 600px) {
    .control-buttons {
        display: grid;
        grid-template-columns: 2fr 1fr;
        grid-template-rows: 1fr 1fr;
        gap: 12px;
        width: 100%;
        max-width: 280px;
    }
    
    #startStopBtn {
        grid-row: 1 / 3;
        grid-column: 1;
        font-size: 20px;
        font-weight: 600;
        min-height: 124px;
    }
}
```

#### 4.1.2 Flexbox方式（代替案）
```css
@media (max-width: 600px) {
    .control-buttons {
        display: flex;
        gap: 12px;
    }
    
    #startStopBtn {
        flex: 2;
        height: 124px;
    }
    
    .secondary-buttons {
        flex: 1;
        display: flex;
        flex-direction: column;
        gap: 12px;
    }
}
```

### 4.2 タッチ最適化CSS

#### 4.2.1 基本設定
```css
@media (max-width: 600px) {
    .stopwatch-container {
        touch-action: manipulation;
        user-select: none;
        -webkit-tap-highlight-color: transparent;
    }
    
    .btn {
        touch-action: manipulation;
        -webkit-tap-highlight-color: transparent;
        outline: none;
    }
}
```

#### 4.2.2 アニメーション最適化
```css
.btn {
    will-change: transform;
    backface-visibility: hidden;
    transform: translate3d(0, 0, 0);
}

@media (max-width: 600px) {
    .btn:hover {
        transform: none; /* ホバー無効化 */
    }
    
    .btn:active {
        transform: scale3d(0.95, 0.95, 1);
        transition: transform 0.1s cubic-bezier(0.4, 0, 0.2, 1);
    }
}
```

### 4.3 レスポンシブ実装詳細

#### 4.3.1 段階的フォントサイズ
```css
/* 時間表示のレスポンシブサイズ */
#time {
    font-size: 48px; /* デスクトップ */
}

@media (max-width: 600px) {
    #time {
        font-size: 48px;
        line-height: 1.1;
        letter-spacing: 1px;
        margin-bottom: 28px;
    }
}

@media (max-width: 400px) {
    #time {
        font-size: 44px;
        margin-bottom: 24px;
    }
}

@media (max-width: 320px) {
    #time {
        font-size: 40px;
        line-height: 1.2;
        margin-bottom: 20px;
    }
}
```

#### 4.3.2 画面向き対応
```css
@media (max-width: 600px) and (orientation: landscape) {
    .stopwatch-container {
        flex-direction: row; /* 横向き時は横レイアウト */
        height: 250px;
        max-width: 700px;
    }
    
    .main-display, .data-display {
        width: 60%, 40%; /* デスクトップ比率維持 */
    }
    
    .control-buttons {
        flex-direction: row; /* ボタン横並び復活 */
    }
}
```

### 4.2 実装判断基準
- **ブラウザサポート要件**: 要確認
- **既存コードとの整合性**: 重視
- **保守性**: 長期的な観点で評価

## 5. パフォーマンス要件

### 5.1 モバイル特有の制約
- **バッテリー消費**: アニメーション最小化
- **タッチ応答性**: 100ms以内の反応
- **スクロール性能**: 60fps維持

### 5.2 最適化要件
- **不要なホバーエフェクト**: モバイル時無効化
- **CSSアニメーション**: GPU加速の活用
- **画像**: 使用しない（アイコンフォント、CSS描画）

## 6. ユーザビリティ要件

### 6.1 操作性
- **片手操作**: 親指での全操作が可能
- **誤操作防止**: 十分なボタン間隔と明確な状態表示
- **学習コスト**: 直感的な操作感

### 6.2 アクセシビリティ
- **色覚多様性**: 色のみに依存しない状態表示
- **運動機能**: 大きなタッチエリア
- **認知**: 明確なラベルと状態表示

## 7. 受け入れ基準（追加・変更分）

### 7.1 レイアウトテスト
- [ ] 600px以下でボタンレイアウトが変更される
- [ ] Startボタンが他のボタンの2倍のサイズになる
- [ ] Lap/Resetボタンが縦並びで配置される
- [ ] ボタン間隔が適切に確保される（12px以上）
- [ ] コンテナサイズが画面幅に応じて適切に調整される

### 7.2 時間表示テスト
- [ ] 601px以上で48pxサイズで表示される
- [ ] 401px-600pxで48pxサイズで表示される
- [ ] 321px-400pxで44pxサイズで表示される
- [ ] 320px以下で40pxサイズで表示される
- [ ] モノスペースフォントが適用されている
- [ ] 文字間隔・行間が適切に調整されている

### 7.3 タッチ操作テスト
- [ ] 全ボタンが指で正確にタップできる（最小56px）
- [ ] ボタン境界での誤タップが発生しない（12px間隔）
- [ ] タップ時の視覚的フィードバックが機能する（0.95倍スケール）
- [ ] ダブルタップズームが無効化されている
- [ ] ピンチズームが無効化されている
- [ ] タップ範囲が視覚的ボタンより8px大きい
- [ ] ハプティックフィードバックが機能する（対応デバイス）

### 7.4 視認性テスト
- [ ] 時間表示が指定サイズで表示される
- [ ] Startボタンテキストが20px以上で表示される
- [ ] データリストが16px以上で表示される
- [ ] コントラスト比が4.5:1以上を満たす
- [ ] 明るい環境・暗い環境両方で視認可能
- [ ] 色覚多様性に配慮した表示である

### 7.5 レスポンシブテスト
- [ ] iPhone SE (375px) で正常表示される
- [ ] iPhone 12 (390px) で正常表示される
- [ ] iPhone 14 Pro Max (430px) で正常表示される
- [ ] Android標準サイズ (360px) で正常表示される
- [ ] 極小画面 (320px) で正常表示される
- [ ] iPad mini (768px) でデスクトップレイアウトが表示される
- [ ] 画面回転時に適切なレイアウトに切り替わる

### 7.6 パフォーマンステスト
- [ ] ボタンタップから反応まで100ms以内
- [ ] 画面回転時の再描画が1秒以内
- [ ] スクロール時のフレームレート60fps維持
- [ ] タイマー実行中のメモリ使用量が安定している
- [ ] バッテリー消費が最小化されている
- [ ] アニメーションがGPU加速で動作している

### 7.7 データ表示テスト
- [ ] ラップタイム・履歴が適切なサイズで表示される
- [ ] スクロールが滑らかに動作する（iOS momentum）
- [ ] 最大表示件数（8項目）が守られている
- [ ] データエリアのスクロールバーが適切に表示される
- [ ] コンテンツ階層が視覚的に明確である

### 7.8 画面向き対応テスト
- [ ] 縦向き時に新ボタンレイアウトが表示される
- [ ] 横向き時にデスクトップレイアウトが表示される
- [ ] 画面回転時にレイアウトが適切に切り替わる
- [ ] 回転時にデータが保持される
- [ ] 回転時のアニメーションが滑らかである

## 8. 技術的検討事項

### 8.1 実装選択の判断材料
1. **対象ブラウザバージョン**: CSS Grid対応状況
2. **既存コードの構造**: HTMLの変更可能範囲
3. **チームの技術習熟度**: Grid vs Flexboxの選択
4. **将来の拡張予定**: ボタン追加の可能性

### 8.2 リスク要因
- **レイアウト崩れ**: 極端なサイズでのテスト必須
- **パフォーマンス劣化**: アニメーション処理の最適化
- **ブラウザ差異**: iOS Safari/Chrome の表示確認

## 9. 開発フェーズ提案

### Phase 1: コアレイアウト改善 (1-2日)
**目標**: 基本的なモバイル最適化
- 新ボタンレイアウトの実装（CSS Grid/Flexbox選択）
- 時間表示サイズの段階的調整（48px/44px/40px）
- 基本的なタッチエリア拡大
- レスポンシブブレークポイント設定

**完了基準**: 
- 600px以下で新レイアウト表示
- 時間表示が適切なサイズ
- 基本的なタッチ操作可能

### Phase 2: タッチ・操作性最適化 (1-2日)
**目標**: モバイル操作感の向上
- タッチフィードバック強化（スケール変化）
- ズーム・選択無効化
- タッチ範囲拡張（+8px）
- アニメーション最適化（GPU加速）

**完了基準**:
- 誤操作が大幅に減少
- タッチフィードバックが快適
- パフォーマンス60fps維持

### Phase 3: 詳細調整・最適化 (1日)
**目標**: 完璧なモバイル体験
- データエリアの視認性向上
- 極小画面対応（320px）
- 画面向き対応
- 細部のスタイル調整

**完了基準**:
- 全受け入れ基準を満たす
- 極端なサイズでも正常動作
- プロダクションレディ

### Phase 4: 検証・調整 (0.5日)
**目標**: 品質保証
- 実機テスト（iPhone/Android）
- パフォーマンス検証
- バグ修正・微調整

**完了基準**:
- 主要デバイスで完璧に動作
- パフォーマンス基準達成
- ユーザビリティ検証完了

**総開発期間**: 4.5-6.5日
**推奨順序**: 段階的リリース（Phase 1→2→3→4）

---

**文書バージョン**: 1.0  
**作成日**: 2025年6月17日  
**対象**: モバイル最適化版  
**前提**: 基本機能は既存要件定義書に準拠